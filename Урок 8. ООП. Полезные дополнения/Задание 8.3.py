"""8.3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список только
числами. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться"""


class NotNumber(Exception):
    def __str__(self):
        return "Введено не число"

    def detection(num):
        try:
            float(num)
            return True
        except ValueError:
            return False

user_list = []

while True:
    number = input("Введите число для добавления в список, для остановки введите 'stop': ")
    if NotNumber.detection(number):
        user_list.append(int(number))
    elif number == "stop":
        break
    elif not NotNumber.detection(number):
        print(NotNumber())

    print(f"Текущий список: {user_list}")
